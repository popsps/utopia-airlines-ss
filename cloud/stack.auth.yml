# aws cloudformation create-stack --stack-name testutopia1 --template-body file://$PWD/stack.yml
AWSTemplateFormatVersion: "2010-09-09"
Description: "ecr ecs alb"
Resources:
  UtopiaRDS:
    Type: 'AWS::RDS::DBInstance'
    Properties:
        DBName: "utopia"
        DBInstanceIdentifier: "utopiards"
        Engine: MySQL
        MasterUsername: utopia
        MasterUserPassword: utopiacoolpassword
        DBInstanceClass: db.t2.micro
        AllocatedStorage: '5'
        PubliclyAccessible: true
        VPCSecurityGroups:
            - sg-05c329bea57a8d257
  authRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: "auth"
  utopiaECS:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: "utopiaCluster"
      ClusterSettings:
        - Name: containerInsights
          Value: disabled
      CapacityProviders:
        - FARGATE_SPOT
        - FARGATE
  utopiaALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "utopiaALB"
      Scheme: "internet-facing"
      Type: "application"
      IpAddressType: "ipv4"
      Subnets:
        - "subnet-309a0757"
        - "subnet-815f088e"
        - "subnet-9ae3ced0"
        - "subnet-9c9806c0"
        - "subnet-ad6ecf93"
        - "subnet-ca8119e4"
      SecurityGroups:
        - !Ref UtopiaSecurityGroup
      LoadBalancerAttributes:
        - Key: "access_logs.s3.enabled"
          Value: "false"
        - Key: "idle_timeout.timeout_seconds"
          Value: "60"
        - Key: "deletion_protection.enabled"
          Value: "false"
        - Key: "routing.http2.enabled"
          Value: "true"
        - Key: "routing.http.drop_invalid_header_fields.enabled"
          Value: "false"
        - Key: "routing.http.desync_mitigation_mode"
          Value: "defensive"
        - Key: "waf.fail_open.enabled"
          Value: "false"
  authListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref authTG
      LoadBalancerArn: !Ref utopiaALB
      Port: 8081
      Protocol: HTTP
  authListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref authTG
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref authTG
                Weight: 1
            TargetGroupStickinessConfig:
              Enabled: false
      Priority: 1
      Conditions:
        - Field: "path-pattern"
          Values:
            - "/*"
      ListenerArn: !Ref authListener
  authTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: "authTG"
      VpcId: "vpc-0d17b977"
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/api/session"
      Port: 80
      Protocol: "HTTP"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      TargetType: "ip"
      Matcher:
        HttpCode: "200"
      HealthyThresholdCount: 5
      HealthCheckEnabled: true
      TargetGroupAttributes:
        - Key: "stickiness.enabled"
          Value: "false"
        - Key: "deregistration_delay.timeout_seconds"
          Value: "300"
        - Key: "stickiness.app_cookie.cookie_name"
          Value: ""
        - Key: "stickiness.type"
          Value: "lb_cookie"
        - Key: "stickiness.lb_cookie.duration_seconds"
          Value: "86400"
        - Key: "slow_start.duration_seconds"
          Value: "0"
        - Key: "stickiness.app_cookie.duration_seconds"
          Value: "86400"
        - Key: "load_balancing.algorithm.type"
          Value: "round_robin"

  authTaskdefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn: UtopiaRDS
    Properties:
      Family: "authTD"
      NetworkMode: "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: "256"
      Memory: "512"
      ExecutionRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      ContainerDefinitions:
        - Name: "auth-container"
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/auth:latest"
          Cpu: 256
          Memory: 512
          Essential: true
          PortMappings:
            - ContainerPort: 8081
              HostPort: 8081
              Protocol: "tcp"
          Environment:
            -
              Name: "DB_HOST"
              Value: !GetAtt UtopiaRDS.Endpoint.Address
            -
              Name: "DB_USER"
              Value: "utopia"
            -
              Name: "DB_PASSWORD"
              Value: "utopiacoolpassword"
            -
              Name: "DB_NAME"
              Value: "utopia"
            -
              Name: "AUTH_JWT_PRIVATE_KEY"
              Value: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCyLMHAxN+1+W40\nKLk0D/la4Vyql322HyiJeZ29KgFqnzicSZ5VzQdeEN4peSShh9wvP0z6uRUVqWqK\nNtV+v4tSTf8NK/+qgRy8LXzF9nTWgwLQBhK+hzNxGksOB3bQbbH06Btv1BpSf9ia\nWZkDNtwW8Z5emL3J5ODyVVPRYx0EzSUFzbtKKSH/rjNmzOINz7Q0Z3bVFUvHTFkp\n+KF/A4W3MIroyqKGuX3+WpoGXfO8C02IbqKImktfYNdy4hh+whm0kyOC+bp5uadL\nKVqpEI1ae1s2AAQIdFHK4IM5Mi/3z8D/is5JHqnMwd61Mp0SZjorWgJGkBXGqRAR\nv8s9x7b3AgMBAAECggEAFkphJwO6VSLSdbYOjYPeF0+Qb0sqkAlP4fsUD+FccgFf\nbLYNGADhhhQoJxofyhGcK1EJCWj0SVR7nrUDeqrt/CsD2JsDjko+1Q//xyhxL5EO\nXgYUfD+f4OuALk4iwCqpE9Gh9Ric/ms+JvlEmlFXsYsi3ATR4Zs/xTGFnfF/ZOUr\nvURlOvuK9UV5qVMRnsnS9EGKcMAR8LJHFfGQ9Gr5AgBDLRIrdXzdzCSqB0/WLSq0\nW8FT47t1G+QzoCuZ7pwgugyNltCqb0kqfypYnb8X4CQ2Njoj+/9ip65zVjQLAn9l\nydaEXvDum/XLNRkaCXciIAQvrQwKmxHTqOzd0nYhEQKBgQDm/FsZRm1F7aQjsCYs\nBKQoR7gQ8UWvDhStoQpGzau+tJOzew71UXHPbiv4rqs/Y8Dmuq0ltxadssxL1qTN\nWmQ8cPK4UT57m+XolklKO9xje2JOMDCuMC8cY6EykxXxVXr+GMuODEDvEdwfCWzk\nY2I6OF/4cSOpQlWSaUfVn2pqvwKBgQDFeFFNUzxIc9E0sCpJsgMO12gX6ooOajc1\nYQHfPHnsIrOpBTfF0qKoYXUoilC13+2u4k+AmDVwD0R4/VY83czSTJw3AjOaiik9\nvm862y5uJkjHwXN4P6Ojhp+bcITuB6NXbF+TfvzXhXY2upgBmoceixZGHl66Smyy\nTu9VhsLZyQKBgDtyqXOI16jOr5brx/c+Po2LX8kkf329Tv8c2ks8tb4ANZ9UxZXH\nn1X2keSP98z5vHTliJiTVYPCt6exF3suj2uq2h0r87vWdMZ2n2g2ndMQt01OQ8kg\n548T6THd/yC8kkoBUao+ZxvgadmnEFp7ZZV8Wt7TJ41xYBqtc+p7++R7AoGAXM2+\n5+hGXIaRu4FPXnManM7/TL4dQ8kHST7d8lwpsKBebwDUxVPIvfmPZg4bAF7NBXO2\niWj/NDr4oyPsc46JxAvdHr0aI3brCumEvNRlbb7wVXDFI65E6YVLXXH0BynvyhZU\nlK0JhwBiHjZzWc2V0vTq8uky+7oee249bKR4zoECgYEA45ETZKbJ5wkUvdhaiP6s\n3gMza4tHUx35zjxqKlz4e0toyPyu53fYN5tqqmE595vFB/kmGIthaj8+oA2n16Td\npH5nJa97xw01nrGQTWGIRnLXtmidAbKq8W9KhtlSGZjEnWn8Wr132DuOtxj2wu8x\njGhRG/yMidhOQsgcfw6LPRE=\n-----END PRIVATE KEY-----\n"
            -
              Name: "AUTH_JWT_PUBLIC_KEY"
              Value: "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsizBwMTftfluNCi5NA/5\nWuFcqpd9th8oiXmdvSoBap84nEmeVc0HXhDeKXkkoYfcLz9M+rkVFalqijbVfr+L\nUk3/DSv/qoEcvC18xfZ01oMC0AYSvoczcRpLDgd20G2x9Ogbb9QaUn/YmlmZAzbc\nFvGeXpi9yeTg8lVT0WMdBM0lBc27Sikh/64zZsziDc+0NGd21RVLx0xZKfihfwOF\ntzCK6Mqihrl9/lqaBl3zvAtNiG6iiJpLX2DXcuIYfsIZtJMjgvm6ebmnSylaqRCN\nWntbNgAECHRRyuCDOTIv98/A/4rOSR6pzMHetTKdEmY6K1oCRpAVxqkQEb/LPce2\n9wIDAQAB\n-----END PUBLIC KEY-----\n"


  authService:
    Type: AWS::ECS::Service
    DependsOn: authListener
    Properties:
      ServiceName: "auth-service"
      TaskDefinition: !Ref authTaskdefinition
      Cluster: !Ref utopiaECS
      LaunchType: "FARGATE"
      PlatformVersion: "LATEST"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: false
          Rollback: false
      DesiredCount: 1
      SchedulingStrategy: "REPLICA"
      HealthCheckGracePeriodSeconds: 60
      LoadBalancers:
        - ContainerName: "auth-container"
          ContainerPort: 8081
          TargetGroupArn: !Ref authTG
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "ENABLED"
          SecurityGroups:
            - !Ref UtopiaSecurityGroup
          Subnets:
            - "subnet-309a0757"
            - "subnet-815f088e"
            - "subnet-9ae3ced0"
            - "subnet-9c9806c0"
            - "subnet-ad6ecf93"
            - "subnet-ca8119e4"
  UtopiaSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Open up 22, 80, 443, 3000, 3001, 3002,8080, 8081"
      GroupName: "utopiaALBSGCF"
      VpcId: "vpc-0d17b977"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
        - CidrIpv6: "::/0"
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          FromPort: 3000
          IpProtocol: "tcp"
          ToPort: 3002
        - CidrIpv6: "::/0"
          FromPort: 3000
          IpProtocol: "tcp"
          ToPort: 3002
        - CidrIp: "0.0.0.0/0"
          FromPort: 22
          IpProtocol: "tcp"
          ToPort: 22
        - CidrIpv6: "::/0"
          FromPort: 22
          IpProtocol: "tcp"
          ToPort: 22
        - CidrIp: "0.0.0.0/0"
          FromPort: 443
          IpProtocol: "tcp"
          ToPort: 443
        - CidrIpv6: "::/0"
          FromPort: 443
          IpProtocol: "tcp"
          ToPort: 443
        - CidrIp: "0.0.0.0/0"
          FromPort: 8081
          IpProtocol: "tcp"
          ToPort: 8081
        - CidrIpv6: "::/0"
          FromPort: 8081
          IpProtocol: "tcp"
          ToPort: 8081
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
Outputs:
  Address:
    Value: !GetAtt UtopiaRDS.Endpoint.Address